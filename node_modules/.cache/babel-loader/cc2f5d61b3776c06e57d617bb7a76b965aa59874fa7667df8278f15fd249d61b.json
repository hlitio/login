{"ast":null,"code":"import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n  const size = buffers.reduce((acc, _ref) => {\n    let {\n      length\n    } = _ref;\n    return acc + length;\n  }, 0);\n  const buf = new Uint8Array(size);\n  let i = 0;\n  buffers.forEach(buffer => {\n    buf.set(buffer, i);\n    i += buffer.length;\n  });\n  return buf;\n}\nexport function p2s(alg, p2sInput) {\n  return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n  if (value < 0 || value >= MAX_INT32) {\n    throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n  }\n  buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n  const high = Math.floor(value / MAX_INT32);\n  const low = value % MAX_INT32;\n  const buf = new Uint8Array(8);\n  writeUInt32BE(buf, high, 0);\n  writeUInt32BE(buf, low, 4);\n  return buf;\n}\nexport function uint32be(value) {\n  const buf = new Uint8Array(4);\n  writeUInt32BE(buf, value);\n  return buf;\n}\nexport function lengthAndInput(input) {\n  return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n  const iterations = Math.ceil((bits >> 3) / 32);\n  const res = new Uint8Array(iterations * 32);\n  for (let iter = 0; iter < iterations; iter++) {\n    const buf = new Uint8Array(4 + secret.length + value.length);\n    buf.set(uint32be(iter + 1));\n    buf.set(secret, 4);\n    buf.set(value, 4 + secret.length);\n    res.set(await digest('sha256', buf), iter * 32);\n  }\n  return res.slice(0, bits >> 3);\n}","map":{"version":3,"names":["digest","encoder","TextEncoder","decoder","TextDecoder","MAX_INT32","concat","buffers","size","reduce","acc","length","buf","Uint8Array","i","forEach","buffer","set","p2s","alg","p2sInput","encode","writeUInt32BE","value","offset","RangeError","uint64be","high","Math","floor","low","uint32be","lengthAndInput","input","concatKdf","secret","bits","iterations","ceil","res","iter","slice"],"sources":["C:/Users/hherenu/Desktop/Proyectos/login/node_modules/jose/dist/browser/lib/buffer_utils.js"],"sourcesContent":["import digest from '../runtime/digest.js';\r\nexport const encoder = new TextEncoder();\r\nexport const decoder = new TextDecoder();\r\nconst MAX_INT32 = 2 ** 32;\r\nexport function concat(...buffers) {\r\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\r\n    const buf = new Uint8Array(size);\r\n    let i = 0;\r\n    buffers.forEach((buffer) => {\r\n        buf.set(buffer, i);\r\n        i += buffer.length;\r\n    });\r\n    return buf;\r\n}\r\nexport function p2s(alg, p2sInput) {\r\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\r\n}\r\nfunction writeUInt32BE(buf, value, offset) {\r\n    if (value < 0 || value >= MAX_INT32) {\r\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\r\n    }\r\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\r\n}\r\nexport function uint64be(value) {\r\n    const high = Math.floor(value / MAX_INT32);\r\n    const low = value % MAX_INT32;\r\n    const buf = new Uint8Array(8);\r\n    writeUInt32BE(buf, high, 0);\r\n    writeUInt32BE(buf, low, 4);\r\n    return buf;\r\n}\r\nexport function uint32be(value) {\r\n    const buf = new Uint8Array(4);\r\n    writeUInt32BE(buf, value);\r\n    return buf;\r\n}\r\nexport function lengthAndInput(input) {\r\n    return concat(uint32be(input.length), input);\r\n}\r\nexport async function concatKdf(secret, bits, value) {\r\n    const iterations = Math.ceil((bits >> 3) / 32);\r\n    const res = new Uint8Array(iterations * 32);\r\n    for (let iter = 0; iter < iterations; iter++) {\r\n        const buf = new Uint8Array(4 + secret.length + value.length);\r\n        buf.set(uint32be(iter + 1));\r\n        buf.set(secret, 4);\r\n        buf.set(value, 4 + secret.length);\r\n        res.set(await digest('sha256', buf), iter * 32);\r\n    }\r\n    return res.slice(0, bits >> 3);\r\n}\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAO,MAAMC,OAAO,GAAG,IAAIC,WAAW,EAAE;AACxC,OAAO,MAAMC,OAAO,GAAG,IAAIC,WAAW,EAAE;AACxC,MAAMC,SAAS,GAAG,CAAC,IAAI,EAAE;AACzB,OAAO,SAASC,MAAM,GAAa;EAAA,kCAATC,OAAO;IAAPA,OAAO;EAAA;EAC7B,MAAMC,IAAI,GAAGD,OAAO,CAACE,MAAM,CAAC,CAACC,GAAG;IAAA,IAAE;MAAEC;IAAO,CAAC;IAAA,OAAKD,GAAG,GAAGC,MAAM;EAAA,GAAE,CAAC,CAAC;EACjE,MAAMC,GAAG,GAAG,IAAIC,UAAU,CAACL,IAAI,CAAC;EAChC,IAAIM,CAAC,GAAG,CAAC;EACTP,OAAO,CAACQ,OAAO,CAAEC,MAAM,IAAK;IACxBJ,GAAG,CAACK,GAAG,CAACD,MAAM,EAAEF,CAAC,CAAC;IAClBA,CAAC,IAAIE,MAAM,CAACL,MAAM;EACtB,CAAC,CAAC;EACF,OAAOC,GAAG;AACd;AACA,OAAO,SAASM,GAAG,CAACC,GAAG,EAAEC,QAAQ,EAAE;EAC/B,OAAOd,MAAM,CAACL,OAAO,CAACoB,MAAM,CAACF,GAAG,CAAC,EAAE,IAAIN,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEO,QAAQ,CAAC;AACrE;AACA,SAASE,aAAa,CAACV,GAAG,EAAEW,KAAK,EAAEC,MAAM,EAAE;EACvC,IAAID,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAIlB,SAAS,EAAE;IACjC,MAAM,IAAIoB,UAAU,CAAE,6BAA4BpB,SAAS,GAAG,CAAE,cAAakB,KAAM,EAAC,CAAC;EACzF;EACAX,GAAG,CAACK,GAAG,CAAC,CAACM,KAAK,KAAK,EAAE,EAAEA,KAAK,KAAK,EAAE,EAAEA,KAAK,KAAK,CAAC,EAAEA,KAAK,GAAG,IAAI,CAAC,EAAEC,MAAM,CAAC;AAC5E;AACA,OAAO,SAASE,QAAQ,CAACH,KAAK,EAAE;EAC5B,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,GAAGlB,SAAS,CAAC;EAC1C,MAAMyB,GAAG,GAAGP,KAAK,GAAGlB,SAAS;EAC7B,MAAMO,GAAG,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC;EAC7BS,aAAa,CAACV,GAAG,EAAEe,IAAI,EAAE,CAAC,CAAC;EAC3BL,aAAa,CAACV,GAAG,EAAEkB,GAAG,EAAE,CAAC,CAAC;EAC1B,OAAOlB,GAAG;AACd;AACA,OAAO,SAASmB,QAAQ,CAACR,KAAK,EAAE;EAC5B,MAAMX,GAAG,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC;EAC7BS,aAAa,CAACV,GAAG,EAAEW,KAAK,CAAC;EACzB,OAAOX,GAAG;AACd;AACA,OAAO,SAASoB,cAAc,CAACC,KAAK,EAAE;EAClC,OAAO3B,MAAM,CAACyB,QAAQ,CAACE,KAAK,CAACtB,MAAM,CAAC,EAAEsB,KAAK,CAAC;AAChD;AACA,OAAO,eAAeC,SAAS,CAACC,MAAM,EAAEC,IAAI,EAAEb,KAAK,EAAE;EACjD,MAAMc,UAAU,GAAGT,IAAI,CAACU,IAAI,CAAC,CAACF,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;EAC9C,MAAMG,GAAG,GAAG,IAAI1B,UAAU,CAACwB,UAAU,GAAG,EAAE,CAAC;EAC3C,KAAK,IAAIG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,UAAU,EAAEG,IAAI,EAAE,EAAE;IAC1C,MAAM5B,GAAG,GAAG,IAAIC,UAAU,CAAC,CAAC,GAAGsB,MAAM,CAACxB,MAAM,GAAGY,KAAK,CAACZ,MAAM,CAAC;IAC5DC,GAAG,CAACK,GAAG,CAACc,QAAQ,CAACS,IAAI,GAAG,CAAC,CAAC,CAAC;IAC3B5B,GAAG,CAACK,GAAG,CAACkB,MAAM,EAAE,CAAC,CAAC;IAClBvB,GAAG,CAACK,GAAG,CAACM,KAAK,EAAE,CAAC,GAAGY,MAAM,CAACxB,MAAM,CAAC;IACjC4B,GAAG,CAACtB,GAAG,CAAC,MAAMjB,MAAM,CAAC,QAAQ,EAAEY,GAAG,CAAC,EAAE4B,IAAI,GAAG,EAAE,CAAC;EACnD;EACA,OAAOD,GAAG,CAACE,KAAK,CAAC,CAAC,EAAEL,IAAI,IAAI,CAAC,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}