{"ast":null,"code":"import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n  if (!(cek instanceof Uint8Array)) {\n    throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n  }\n  const keySize = parseInt(enc.slice(1, 4), 10);\n  const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n  const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n    hash: `SHA-${keySize << 1}`,\n    name: 'HMAC'\n  }, false, ['sign']);\n  const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n  const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n  let macCheckPassed;\n  try {\n    macCheckPassed = timingSafeEqual(tag, expectedTag);\n  } catch (_a) {}\n  if (!macCheckPassed) {\n    throw new JWEDecryptionFailed();\n  }\n  let plaintext;\n  try {\n    plaintext = new Uint8Array(await crypto.subtle.decrypt({\n      iv,\n      name: 'AES-CBC'\n    }, encKey, ciphertext));\n  } catch (_b) {}\n  if (!plaintext) {\n    throw new JWEDecryptionFailed();\n  }\n  return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n  let encKey;\n  if (cek instanceof Uint8Array) {\n    encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n  } else {\n    checkEncCryptoKey(cek, enc, 'decrypt');\n    encKey = cek;\n  }\n  try {\n    return new Uint8Array(await crypto.subtle.decrypt({\n      additionalData: aad,\n      iv,\n      name: 'AES-GCM',\n      tagLength: 128\n    }, encKey, concat(ciphertext, tag)));\n  } catch (_a) {\n    throw new JWEDecryptionFailed();\n  }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n  if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n    throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n  }\n  checkIvLength(enc, iv);\n  switch (enc) {\n    case 'A128CBC-HS256':\n    case 'A192CBC-HS384':\n    case 'A256CBC-HS512':\n      if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(-3), 10));\n      return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n    case 'A128GCM':\n    case 'A192GCM':\n    case 'A256GCM':\n      if (cek instanceof Uint8Array) checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n      return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n    default:\n      throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n  }\n};\nexport default decrypt;","map":{"version":3,"names":["concat","uint64be","checkIvLength","checkCekLength","timingSafeEqual","JOSENotSupported","JWEDecryptionFailed","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","cbcDecrypt","enc","cek","ciphertext","iv","tag","aad","Uint8Array","TypeError","keySize","parseInt","slice","encKey","subtle","importKey","subarray","macKey","hash","name","macData","length","expectedTag","sign","macCheckPassed","_a","plaintext","decrypt","_b","gcmDecrypt","additionalData","tagLength"],"sources":["C:/Users/hherenu/Desktop/Proyectos/login/node_modules/jose/dist/browser/runtime/decrypt.js"],"sourcesContent":["import { concat, uint64be } from '../lib/buffer_utils.js';\r\nimport checkIvLength from '../lib/check_iv_length.js';\r\nimport checkCekLength from './check_cek_length.js';\r\nimport timingSafeEqual from './timing_safe_equal.js';\r\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\r\nimport crypto, { isCryptoKey } from './webcrypto.js';\r\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { types } from './is_key_like.js';\r\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\r\n    if (!(cek instanceof Uint8Array)) {\r\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\r\n    }\r\n    const keySize = parseInt(enc.slice(1, 4), 10);\r\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\r\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\r\n        hash: `SHA-${keySize << 1}`,\r\n        name: 'HMAC',\r\n    }, false, ['sign']);\r\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\r\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\r\n    let macCheckPassed;\r\n    try {\r\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\r\n    }\r\n    catch (_a) {\r\n    }\r\n    if (!macCheckPassed) {\r\n        throw new JWEDecryptionFailed();\r\n    }\r\n    let plaintext;\r\n    try {\r\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\r\n    }\r\n    catch (_b) {\r\n    }\r\n    if (!plaintext) {\r\n        throw new JWEDecryptionFailed();\r\n    }\r\n    return plaintext;\r\n}\r\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\r\n    let encKey;\r\n    if (cek instanceof Uint8Array) {\r\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\r\n    }\r\n    else {\r\n        checkEncCryptoKey(cek, enc, 'decrypt');\r\n        encKey = cek;\r\n    }\r\n    try {\r\n        return new Uint8Array(await crypto.subtle.decrypt({\r\n            additionalData: aad,\r\n            iv,\r\n            name: 'AES-GCM',\r\n            tagLength: 128,\r\n        }, encKey, concat(ciphertext, tag)));\r\n    }\r\n    catch (_a) {\r\n        throw new JWEDecryptionFailed();\r\n    }\r\n}\r\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\r\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\r\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\r\n    }\r\n    checkIvLength(enc, iv);\r\n    switch (enc) {\r\n        case 'A128CBC-HS256':\r\n        case 'A192CBC-HS384':\r\n        case 'A256CBC-HS512':\r\n            if (cek instanceof Uint8Array)\r\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\r\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\r\n        case 'A128GCM':\r\n        case 'A192GCM':\r\n        case 'A256GCM':\r\n            if (cek instanceof Uint8Array)\r\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\r\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\r\n        default:\r\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\r\n    }\r\n};\r\nexport default decrypt;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}