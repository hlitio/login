{"ast":null,"code":"import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength) {\n  let apu = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : new Uint8Array(0);\n  let apv = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new Uint8Array(0);\n  if (!isCryptoKey(publicKey)) {\n    throw new TypeError(invalidKeyInput(publicKey, ...types));\n  }\n  checkEncCryptoKey(publicKey, 'ECDH');\n  if (!isCryptoKey(privateKey)) {\n    throw new TypeError(invalidKeyInput(privateKey, ...types));\n  }\n  checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n  const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n  let length;\n  if (publicKey.algorithm.name === 'X25519') {\n    length = 256;\n  } else if (publicKey.algorithm.name === 'X448') {\n    length = 448;\n  } else {\n    length = Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n  }\n  const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n    name: publicKey.algorithm.name,\n    public: publicKey\n  }, privateKey, length));\n  return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n  if (!isCryptoKey(key)) {\n    throw new TypeError(invalidKeyInput(key, ...types));\n  }\n  return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n  if (!isCryptoKey(key)) {\n    throw new TypeError(invalidKeyInput(key, ...types));\n  }\n  return ['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) || key.algorithm.name === 'X25519' || key.algorithm.name === 'X448';\n}","map":{"version":3,"names":["encoder","concat","uint32be","lengthAndInput","concatKdf","crypto","isCryptoKey","checkEncCryptoKey","invalidKeyInput","types","deriveKey","publicKey","privateKey","algorithm","keyLength","apu","Uint8Array","apv","TypeError","value","encode","length","name","Math","ceil","parseInt","namedCurve","substr","sharedSecret","subtle","deriveBits","public","generateEpk","key","generateKey","ecdhAllowed","includes"],"sources":["C:/Users/hherenu/Desktop/Proyectos/login/node_modules/jose/dist/browser/runtime/ecdhes.js"],"sourcesContent":["import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\r\nimport crypto, { isCryptoKey } from './webcrypto.js';\r\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { types } from './is_key_like.js';\r\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\r\n    if (!isCryptoKey(publicKey)) {\r\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\r\n    }\r\n    checkEncCryptoKey(publicKey, 'ECDH');\r\n    if (!isCryptoKey(privateKey)) {\r\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\r\n    }\r\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\r\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\r\n    let length;\r\n    if (publicKey.algorithm.name === 'X25519') {\r\n        length = 256;\r\n    }\r\n    else if (publicKey.algorithm.name === 'X448') {\r\n        length = 448;\r\n    }\r\n    else {\r\n        length =\r\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\r\n    }\r\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\r\n        name: publicKey.algorithm.name,\r\n        public: publicKey,\r\n    }, privateKey, length));\r\n    return concatKdf(sharedSecret, keyLength, value);\r\n}\r\nexport async function generateEpk(key) {\r\n    if (!isCryptoKey(key)) {\r\n        throw new TypeError(invalidKeyInput(key, ...types));\r\n    }\r\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\r\n}\r\nexport function ecdhAllowed(key) {\r\n    if (!isCryptoKey(key)) {\r\n        throw new TypeError(invalidKeyInput(key, ...types));\r\n    }\r\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\r\n        key.algorithm.name === 'X25519' ||\r\n        key.algorithm.name === 'X448');\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}