{"ast":null,"code":"function message(msg, actual) {\n  for (var _len = arguments.length, types = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    types[_key - 2] = arguments[_key];\n  }\n  if (types.length > 2) {\n    const last = types.pop();\n    msg += `one of type ${types.join(', ')}, or ${last}.`;\n  } else if (types.length === 2) {\n    msg += `one of type ${types[0]} or ${types[1]}.`;\n  } else {\n    msg += `of type ${types[0]}.`;\n  }\n  if (actual == null) {\n    msg += ` Received ${actual}`;\n  } else if (typeof actual === 'function' && actual.name) {\n    msg += ` Received function ${actual.name}`;\n  } else if (typeof actual === 'object' && actual != null) {\n    if (actual.constructor && actual.constructor.name) {\n      msg += ` Received an instance of ${actual.constructor.name}`;\n    }\n  }\n  return msg;\n}\nexport default (function (actual) {\n  for (var _len2 = arguments.length, types = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    types[_key2 - 1] = arguments[_key2];\n  }\n  return message('Key must be ', actual, ...types);\n});\nexport function withAlg(alg, actual) {\n  for (var _len3 = arguments.length, types = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    types[_key3 - 2] = arguments[_key3];\n  }\n  return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}","map":{"version":3,"names":["message","msg","actual","types","length","last","pop","join","name","constructor","withAlg","alg"],"sources":["C:/Users/hherenu/Desktop/Proyectos/login/node_modules/jose/dist/browser/lib/invalid_key_input.js"],"sourcesContent":["function message(msg, actual, ...types) {\r\n    if (types.length > 2) {\r\n        const last = types.pop();\r\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\r\n    }\r\n    else if (types.length === 2) {\r\n        msg += `one of type ${types[0]} or ${types[1]}.`;\r\n    }\r\n    else {\r\n        msg += `of type ${types[0]}.`;\r\n    }\r\n    if (actual == null) {\r\n        msg += ` Received ${actual}`;\r\n    }\r\n    else if (typeof actual === 'function' && actual.name) {\r\n        msg += ` Received function ${actual.name}`;\r\n    }\r\n    else if (typeof actual === 'object' && actual != null) {\r\n        if (actual.constructor && actual.constructor.name) {\r\n            msg += ` Received an instance of ${actual.constructor.name}`;\r\n        }\r\n    }\r\n    return msg;\r\n}\r\nexport default (actual, ...types) => {\r\n    return message('Key must be ', actual, ...types);\r\n};\r\nexport function withAlg(alg, actual, ...types) {\r\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,CAACC,GAAG,EAAEC,MAAM,EAAY;EAAA,kCAAPC,KAAK;IAALA,KAAK;EAAA;EAClC,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IAClB,MAAMC,IAAI,GAAGF,KAAK,CAACG,GAAG,EAAE;IACxBL,GAAG,IAAK,eAAcE,KAAK,CAACI,IAAI,CAAC,IAAI,CAAE,QAAOF,IAAK,GAAE;EACzD,CAAC,MACI,IAAIF,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACzBH,GAAG,IAAK,eAAcE,KAAK,CAAC,CAAC,CAAE,OAAMA,KAAK,CAAC,CAAC,CAAE,GAAE;EACpD,CAAC,MACI;IACDF,GAAG,IAAK,WAAUE,KAAK,CAAC,CAAC,CAAE,GAAE;EACjC;EACA,IAAID,MAAM,IAAI,IAAI,EAAE;IAChBD,GAAG,IAAK,aAAYC,MAAO,EAAC;EAChC,CAAC,MACI,IAAI,OAAOA,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACM,IAAI,EAAE;IAClDP,GAAG,IAAK,sBAAqBC,MAAM,CAACM,IAAK,EAAC;EAC9C,CAAC,MACI,IAAI,OAAON,MAAM,KAAK,QAAQ,IAAIA,MAAM,IAAI,IAAI,EAAE;IACnD,IAAIA,MAAM,CAACO,WAAW,IAAIP,MAAM,CAACO,WAAW,CAACD,IAAI,EAAE;MAC/CP,GAAG,IAAK,4BAA2BC,MAAM,CAACO,WAAW,CAACD,IAAK,EAAC;IAChE;EACJ;EACA,OAAOP,GAAG;AACd;AACA,gBAAe,UAACC,MAAM,EAAe;EAAA,mCAAVC,KAAK;IAALA,KAAK;EAAA;EAC5B,OAAOH,OAAO,CAAC,cAAc,EAAEE,MAAM,EAAE,GAAGC,KAAK,CAAC;AACpD,CAAC;AACD,OAAO,SAASO,OAAO,CAACC,GAAG,EAAET,MAAM,EAAY;EAAA,mCAAPC,KAAK;IAALA,KAAK;EAAA;EACzC,OAAOH,OAAO,CAAE,eAAcW,GAAI,qBAAoB,EAAET,MAAM,EAAE,GAAGC,KAAK,CAAC;AAC7E"},"metadata":{},"sourceType":"module","externalDependencies":[]}