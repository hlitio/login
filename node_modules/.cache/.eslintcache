[{"C:\\Users\\Hernan\\Desktop\\Proyectos\\login\\src\\index.js":"1","C:\\Users\\Hernan\\Desktop\\Proyectos\\login\\src\\reportWebVitals.js":"2","C:\\Users\\Hernan\\Desktop\\Proyectos\\login\\src\\App.js":"3"},{"size":516,"mtime":1674572940348,"results":"4","hashOfConfig":"5"},{"size":375,"mtime":1674572940349,"results":"6","hashOfConfig":"5"},{"size":4079,"mtime":1674581485526,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4hnjau",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"C:\\Users\\Hernan\\Desktop\\Proyectos\\login\\src\\index.js",[],[],"C:\\Users\\Hernan\\Desktop\\Proyectos\\login\\src\\reportWebVitals.js",[],[],"C:\\Users\\Hernan\\Desktop\\Proyectos\\login\\src\\App.js",["18","19","20","21"],[],"import './App.css';\r\n\r\nimport  ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\"\r\n\r\nconst bcryptjs = require('bcryptjs')\r\n\r\nconst jose = require('jose')\r\n\r\nconst AGREGAR_USUARIO = gql`\r\nmutation($correo: String!, $password: String!, $idperfil: Int!)\r\n{createUsuario(correo: $correo, password: $password, idperfil: $idperfil) {\r\n  correo\r\n}}\r\n`\r\n\r\nconst Agregar_usuario = ()=>{\r\n  const[nuevoUsuario,{ data, loading, error }] = useMutation(AGREGAR_USUARIO)\r\n  if (loading) return 'Submitting...';\r\n  if (error) return `Submission error! ${error.message}`;\r\n  let correo,password,idperfil\r\n  return(\r\n    <div className=\"contenedor-login\">\r\n      \r\n      <form onSubmit={async e=>{\r\n        e.preventDefault()\r\n        let passencryp = await bcryptjs.hash(password.value,8)\r\n        nuevoUsuario({variables:{correo: correo.value,password: passencryp,idperfil:parseInt(idperfil.value,10)}})\r\n      }} className=\"pure-form pure-form-aligned\">\r\n         <fieldset>\r\n          <legend>Alta de usuarios</legend>\r\n          <div className= \"pure-control-group\">\r\n            <label for= \"correo\">Correo: </label>\r\n            <input ref={node =>{correo=node}} id=\"correo\"></input>\r\n          </div>\r\n          <div className= \"pure-control-group\">\r\n            <label for= \"password\">Password: </label>\r\n            <input ref={node =>{password=node} } type=\"password\" id=\"password\"></input>\r\n          </div>\r\n          <div className= \"pure-control-group\">\r\n            <label for= \"idperfil\">IdPerfil: </label>\r\n            <input ref={node=>{idperfil=node}} id=\"idperfil\"></input>\r\n          </div>\r\n          <div className= \"pure-controls\">\r\n            <button type=\"submit\" className=\"pure-button pure-button-primary\">Agregar Usuario</button>\r\n          </div>\r\n        </fieldset>\r\n\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst Login = ()=>{\r\n \r\n  let correo,password\r\n  const secret = new TextEncoder().encode(\r\n    'cc7e0d44fd473002f1c42167459001140ec6389b7353f8088f4d9a95f2f596f2',\r\n  )\r\n  const alg = 'HS256'\r\n\r\n  return(\r\n    <div className=\"contenedor-login\">\r\n      \r\n      <form onSubmit={async e=>{\r\n        e.preventDefault()\r\n        let passencryp = await bcryptjs.hash(password.value,8)\r\n\r\n\r\n        const jwt = await new jose.SignJWT({ user:123456 })\r\n        .setProtectedHeader({ alg })\r\n        .setIssuedAt()\r\n        .setIssuer('urn:example:issuer')\r\n        .setAudience('urn:example:audience')\r\n        .setExpirationTime('2h')\r\n        .sign(secret)\r\n\r\n        console.log(\"Token:\", jwt)\r\n        console.log(\"----------------------\")\r\n        console.log(\"Verificando\")\r\n        console.log(\"----------------------\")\r\n\r\n        const { payload, protectedHeader } = await jose.jwtVerify(jwt, secret, {\r\n          issuer: 'urn:example:issuer',\r\n          audience: 'urn:example:audience',\r\n        })\r\n        \r\n        console.log(protectedHeader)\r\n        console.log(payload)\r\n\r\n\r\n        \r\n      }} className=\"pure-form pure-form-aligned\">\r\n         <fieldset>\r\n          <legend>Login</legend>\r\n          <div className= \"pure-control-group\">\r\n            <label htmlFor= \"correo\">Correo: </label>\r\n            <input ref={node =>{correo=node}} id=\"correo\"></input>\r\n          </div>\r\n          <div className= \"pure-control-group\">\r\n            <label htmlFor= \"password\">Password: </label>\r\n            <input ref={node =>{password=node} } type=\"password\" id=\"password\"></input>\r\n          </div>\r\n         \r\n          <div className= \"pure-controls\">\r\n            <button type=\"submit\" className=\"pure-button pure-button-primary\">Agregar Usuario</button>\r\n          </div>\r\n        </fieldset>\r\n\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri:\"http://localhost:4000/graphql\"\r\n})\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <div className=\"App\">\r\n      \r\n        \r\n        <Login />\r\n\r\n      </div>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"22","severity":1,"message":"23","line":19,"column":7,"nodeType":"24","messageId":"25","endLine":19,"endColumn":22},{"ruleId":"22","severity":1,"message":"26","line":20,"column":24,"nodeType":"24","messageId":"25","endLine":20,"endColumn":28},{"ruleId":"22","severity":1,"message":"27","line":59,"column":7,"nodeType":"24","messageId":"25","endLine":59,"endColumn":13},{"ruleId":"22","severity":1,"message":"28","line":70,"column":13,"nodeType":"24","messageId":"25","endLine":70,"endColumn":23},"no-unused-vars","'Agregar_usuario' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'correo' is assigned a value but never used.","'passencryp' is assigned a value but never used."]